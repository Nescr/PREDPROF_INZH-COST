import cv2
import numpy as np

blur = (3, 3)
thresh = 20
                                               

colorDict = {
    'red' : np.array([[0, 141, 84], [10, 230, 255]]),
    'yellow' : np.array([[22, 133, 170], [30, 214, 255]]),
    'blue' : np.array([[100, 91, 55], [127, 231, 196]]),

    # 'blue_sticker' : np.array([[92, 112, 103], [109, 174, 181]]),
    # 'green_sticker' : np.array([[38, 52, 145], [57, 140, 190]]),
    # 'yellow_sticker' : np.array([[18, 64, 200], [34, 144, 255]]),
    # 'pink_sticker' : np.array([[147, 150, 174], [179, 187, 255]]),
    # 'orange_sticker' : np.array([[0, 95, 239], [10, 145, 255]]),
}
outputColors = []


#path = 'images\colors.jpg'                                 # –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ

cap = cv2.VideoCapture(0)                                   # –≤–∏–¥–µ–æ —Å –∫–∞–º–µ—Ä—ã
                                                            # (–ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π path)

#cap.set(10, 1)                                             # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è—Ä–∫–æ—Å—Ç–∏ –≤–∏–¥–µ–æ, –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∫–∞–º–µ—Ä–æ–π(—á–∏—Å–ª–æ –≤–º–µ—Å—Ç–æ 0)


while True:
                                                            # –†–∞–±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ:
    success, img = cap.read()                               # –∑–∞—Ö–≤–∞—Ç –∫–∞–¥—Ä–∞

    if not success:                                         # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞k–∏—á–∏—è –≤–∏–¥–µ–æ
        print('No video(')              
        break                           
    img = cv2.flip(img, 1)                                  # –æ—Ç–∑–µ—Ä–∫–∞–ª–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –æ—Å–∏ Y (—É–¥–æ–±–Ω–æ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∫–∞–º–µ—Ä—ã)


                                                            # –†–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ç–æ:
    # img = cv2.imread(path)                                  # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ




    imgHSV = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)           # –ø–µ—Ä–µ–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç Hue, Saturation, Value (–æ—Ç—Ç–µ–Ω–æ–∫, –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å, —è—Ä–∫–æ—Å—Ç—å)

    for color in colorDict:

        checkingColor = colorDict[color]
        
        h_min = checkingColor[0][0]
        h_max = checkingColor[1][0]
        s_min = checkingColor[0][1]
        s_max = checkingColor[1][1]
        v_min = checkingColor[0][2]
        v_max = checkingColor[1][2]

        lower = np.array([h_min, s_min, v_min])             # –Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
        upper = np.array([h_max, s_max, v_max])             # –≤–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞

        mask = cv2.inRange(imgHSV, lower, upper)            # —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
        imgMask = cv2.bitwise_and(img, img, mask=mask)      # –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞

        cv2.imshow("Result", imgMask)                       # –≤—ã–≤–æ–¥ –≤–∏–¥–µ–æ 
        cv2.waitKey(50)                    

        gray_image = cv2.cvtColor(imgMask, cv2.COLOR_BGR2GRAY)                                      # —á/–± —Ñ–æ—Ä–º–∞—Ç
        blurred = cv2.GaussianBlur(gray_image, blur, 0)                                             # —Ä–∞–∑–º—ã—Ç–∏–µ 
        _, thresh_img = cv2.threshold(blurred, thresh, 255, cv2.THRESH_BINARY)                      # –¥–≤–æ–∏—á–Ω—ã–π —á/–± —Ñ–æ—Ä–º–∞—Ç
        contours, _ = cv2.findContours(thresh_img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)      # –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç—É—Ä–æ–≤ 
        #                                   ü†ï                 ü†ï                      ü†ï
        #                             (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –≤–Ω–µ—à–Ω–∏–µ –∫–æ–Ω—Ç—É—Ä—ã, –ø—Ä–æ—Å—Ç–∞—è –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è(—É–ø—Ä–æ—â–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ç—É—Ä–æ–≤))

        for cnt in contours:
            if cv2.contourArea(cnt) > 400:                  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—É—Ä–∞
                outputColors.append(color)                  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–≤–æ–¥–∞
                break

        

    print(*outputColors)                                    # –≤—ã–≤–æ–¥ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
    outputColors.clear()                                    # –æ—á–∏—Å—Ç–∫–∞ 
    
    if cv2.waitKey(1) == ord('q'):                          # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏—à—É –≤—ã—Ö–æ–¥–∞
        break                                               # –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞

cv2.destroyAllWindows()
cap.release()
